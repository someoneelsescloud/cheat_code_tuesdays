parameters:
- name: assetname
  type: string
  default: false
- name: environment
  type: string
  default: false
- name: location
  type: string
  default: false
- name: serviceconnection
  type: string
  default: false


steps:
- task: TerraformInstaller@0
  displayName: Install Terraform
  inputs:
    terraformVersion: 'latest'
- task: TerraformCLI@0
  displayName: Terraform init
  inputs:
    command: 'init'
    backendType: 'azurerm'
    backendServiceArm: '${{ parameters.serviceconnection }}'
    ensureBackend: true
    backendAzureRmResourceGroupName: '${{ parameters.assetname}}-${{ parameters.environment}}-${{ parameters.location}}-rg-1'
    backendAzureRmResourceGroupLocation: '${{ parameters.location}}'
    backendAzureRmStorageAccountName: '${{ parameters.assetname}}storageacc0011'
    backendAzureRmStorageAccountSku: 'Standard_LRS'
    backendAzureRmContainerName: 'tfstates'
    backendAzureRmKey: '${{ parameters.environment}}-tfstate'
    allowTelemetryCollection: false
    commandOptions: '-var assetname=${{ parameters.assetname}} -var environment=${{ parameters.environment}} -var location=${{ parameters.location}}'
    workingDirectory: '$(System.DefaultWorkingDirectory)/04_azure_pipeline_templates'
- task: TerraformCLI@0
  displayName: Terraform validate
  inputs:
    command: 'validate'
    environmentServiceName: '${{ parameters.serviceconnection }}'
    allowTelemetryCollection: false
    workingDirectory: '$(System.DefaultWorkingDirectory)/04_azure_pipeline_templates'
- task: TerraformCLI@0
  displayName: Terraform plan
  inputs:
    command: 'plan'
    environmentServiceName: '${{ parameters.serviceconnection }}'
    allowTelemetryCollection: false
    commandOptions: '-var assetname=${{ parameters.assetname}} -var environment=${{ parameters.environment}} -var location=${{ parameters.location}}'
    workingDirectory: '$(System.DefaultWorkingDirectory)/04_azure_pipeline_templates'    
# - task: TerraformCLI@0
#   displayName: Terraform apply
#   inputs:
#     command: 'apply'
#     environmentServiceName: '${{ parameters.serviceconnection }}'
#     commandOptions: '-var assetname=${{ parameters.assetname}} -var environment=${{ parameters.environment}} -var location=${{ parameters.location}}'
#     workingDirectory: '$(System.DefaultWorkingDirectory)/04_azure_pipeline_templates'    
#     allowTelemetryCollection: false
